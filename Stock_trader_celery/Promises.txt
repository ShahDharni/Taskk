The solution of callback hell is "promises".

A promise is a promise of "code execution".

The code is either executes or fails in both the cases subscriber will be notified.

The syntax of promise :-
let promise= new Promise(function(resolve,reject){
    //execute

})


resolve and reject are two callbacks provided by JS itself and they are called like this :
1. resolve(value) - if the job finishes sucessfully 
2. reject(error) - if the job fails

The promise object returned by the new promise. Constructor has these properties.

1. state - Initially "pending" then changes to either "fulfilled" when resolved  is called or 'rejected' if rejected is called.  
2. result - Initially "undefined" then chnages to value if resolved (resolve(value)) or error if rejected (reject(error)).

Promises are used to execute code parallelly 