How to use HTML files ?

This will be the file structure for our templates. 
The base.html file will include the main HTML structure of the website and divide the content into a main content area and a sidebar.
The list.html and detail.html files will inherit from the base.html file to render the blog post list and detail views respectively.
Django has a powerful template language that allows you to specify how data is displayed.
It is based on template tags, which look like {% tag %} template variables, which look like {{ variable }} and template filters, which can be applied to variables and look like {{ variable|filter }}.



{% load staticfiles %} tells Django to load the staticfiles template tags that are provided by the django.contrib.staticfiles application.
After loading it, you are able to use the {% static %} template filter throughout this template. 
With this template filter, you can include static files such as the blog.css file that you will find in the code of this example, under the static/ directory of the blog application. 
Copy this directory into the same location of your project to use the existing static files.


You can see that there are two {% block %} tags. These tell Django that we want to 
define a block in that area. Templates that inherit from this template can fill the blocks 
with content. We have defined a block called title and a block called content.

With the {% extends %} template tag, we are telling Django to inherit from the blog/base.html template. 
Then we are filling the title and content blocks of the base template with content. 
We iterate through the posts and display their title, date, author, and body, including a link in the title to the canonical URL of the post.
In the body of the post, we are applying two template filters: truncatewords truncates the value to the number of words specified, and linebreaks converts the output into HTML line breaks. 
You can concatenate as many template filters as you wish; each one will be applied to the output generated by the previous one.